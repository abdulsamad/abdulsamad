---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'textarea'> {
  name: string;
  label: string;
  error?: string;
}

const { label, name, error, required, ...props } = Astro.props;
---

<div>
  <div class="relative my-4 flex flex-col-reverse items-start">
    <textarea
      class="w-full text-slate-700 relative py-3 px-2 rounded-lg focus:rounded-lg shadow border border-primary-200 focus:shadow-lg focus:outline-none"
      name={name}
      id={name}
      required={required}
      minlength="10"
      {...props}></textarea>
    <span
      class="w-full h-[5px] absolute left-0 right-0 -translate-y-1 origin-left scale-x-0 rounded-md transition-transform"
      aria-hidden="true"></span>
    <label
      for={name}
      class={`mb-2 font-semibold ml-[2px] 
        ${required ? '[&::after]:[content:"*"] [&::after]:text-red-400' : ''}`}>
      {label}
    </label>
  </div>
  {error && <div class="-m-4 pb-2.5 text-sm text-red-500 text-center">{error}</div>}
</div>

<style>
  textarea {
    animation: grow 0.3s ease forwards;
  }

  textarea:focus ~ span {
    /* background-color: #ec4899; */
    animation: grow 0.5s ease forwards;
  }

  textarea:not(:placeholder-shown):not(:focus):valid ~ span {
    background-color: rgb(22, 163, 74);
    transform: scale(1);
  }

  textarea:not(:placeholder-shown):not(:focus):invalid ~ span {
    background-color: rgb(239, 68, 68);
    transform: scale(1);
  }

  @keyframes grow {
    to {
      transform: scaleX(1);
    }
  }
</style>
