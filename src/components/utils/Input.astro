---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'input'> {
  name: string;
  label: string;
  error?: string;
}

const { type, label, name, error, required, ...props } = Astro.props;
---

<div>
  <div class="relative my-4 flex flex-col-reverse items-start">
    <input
      type={type}
      class="relative w-full rounded-lg border border-primary-200 px-2 py-3 text-slate-700 shadow focus:rounded-lg focus:shadow-lg focus:outline-none"
      name={name}
      id={name}
      required={required}
      {...props}
    />
    <span
      class="absolute bottom-0 left-0 right-0 h-[5px] w-full origin-left translate-y-[1px] scale-x-0 rounded-md transition-transform"
      aria-hidden="true"></span>
    <label
      for={name}
      class={`mb-2 font-semibold ml-[2px] 
      ${required ? '[&::after]:[content:"*"] [&::after]:text-red-400' : ''}`}>
      {label}
    </label>
  </div>
  {error && <div class="-m-4 pb-2.5 text-center text-sm text-red-500">{error}</div>}
</div>

<style>
  input {
    animation: grow 0.5s ease forwards;
  }

  input:focus ~ span {
    /* background-color: #ec4899; */
    animation: grow 0.5s ease forwards;
  }

  input:not(:placeholder-shown):not(:focus):valid ~ span {
    background-color: rgb(22 163 74);
    transform: scale(1);
  }

  input:not(:placeholder-shown):not(:focus):invalid ~ span {
    background-color: rgb(239 68 68);
    transform: scale(1);
  }

  @keyframes grow {
    to {
      transform: scaleX(1);
    }
  }
</style>
